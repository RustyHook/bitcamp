App Name: Piepser

This is a text document that contains information on what each "screen" should look like.  Please reference included .PNG file.

******************************************************************************
**Login Screen --> 1 (xml name is: login.xml)
************************************************************************
This is the screen the user will see upon first opening the application.

###Visuals:

The login screen will have two text fields in the middle of the application:
	-Username
	-Password
There is also a "Remember me" check box to store the username for future logins.
Under Remember Me are two buttons

At the bottom edge of application are two buttons on opposite corners:
	-Create New Account
	-Forgot Password

.Create New Account will open a new window

Forgot Password will open a new window.

###Data:

The login screen will need to read and interpret username and password data from the database.

The bottom buttons will need to be programmed to open the correct windows.

*****************************************************************************
**Register Page  --> 2 (new_account.xml)
****************************************************************************
The register page is screen the user will see when creating a new account.  They are coming from the Login Screen.

###Visuals:

The user will be presented with six (6) text fields for username, password, first name, last name, email, and phone number.

At the bottom of the page is a submit button.

###Data:

The information entered on this page will be added to our database.

MySQL tables that will be edited:
	username
	password
	first name
	last name
	email
	phone number

Also, record should be assigned a new unique idetifer (most likely called "User ID").

Everytime submit is pressed, the user is assigned the next available User ID
	(e.g. database already contains user 001 and user 002.  New user will be assigned user 003.  Next new user will be assigned user 004... etc)

***********************************************************************************
**Main Page  --> 3 (xml name is: main_page.xml)
*********************************************************************************

This is the page that the user will spend most of his or her time in.  Hence "main page".  Inside this screen, the user will be able
to see his list of groups.  He will also be allowed to add new groups from this page.  There are also buttons on the page to access a general settings page and 
a "View Requests Page"

###Visuals:

The top border of window will have a settings button and a view requests button.

In the middle of the window, there will be a scrollable list of groups the user has made
	(e.g. HR, Accounting, IT People)

At the bottom border of the window there will be two buttons named create group and remove group.

If present, clicking on a group button will take user to the Group View page 

-Settings button will take user to settings page

-View Requests will take user to requests page

- Create Group will take user to Create new Group Page

- Remove group will take the user to the remove group page
	options:
		user will stay on same page, and can "delete" the buttons that are there (think Apple iOS and deleting emails0
		user will be directed to a different page and choose which groups to remove (checklist) and come back to Main page where the removed group will be gone.

###Data:

The actual groups will be stored on device.
	Option: groups can be stored as a table on MySQL and queryed from app

This page needs to access whereever the above data is stored and display it on the Main Page.

The Grouplist portion of the main page should be scrollable if the user has more groups than the window can fit.

The settings, view requests, create group, and remove group buttons stay in place even if grouplist is scrollable.
	(i.e. when scrolling thru list, can still access buttons without having to scroll all the way back up or down)

Buttons as described in visual section should be correctly programmed to take user to appropriate pages..


********************************************************************************************
**View Requests  --> 4 (xml name is: view_request
*********************************************************************************************

View Requests Page is where the user can view requests sent from other users.  They click on a request, are redirected to a new screen and then they make their yes or no selection.

###Visuals: 

All the requests are in a scrollable window in the middle of the window.  If there are more requests than the window can fit, the scroll part becomes active.

Selecting a request will bring up the option to respond in a different screen.

If there are no requests available to the user, no requests will be shown on the screen.

There is a back button at the bottom right corner of the screen - this will revert the user to the Main Page

###Data:

Requests from other users will be pushed from the database server to the client's device.

Requests will read "Request from Joe Shmo" --> Request from *Contact Name*

Requests will appear in chronological order.  If there are more requests than the window can fit, it will become scrollable.

When a request has been responded to, it will disappear from the View Requests page.


********************************************************************************************
**Settings  --> 5
*********************************************************************************************

To annoying to make right now

********************************************************************************************
**Group View  --> 6 (xml name is: group_view.xml)
*********************************************************************************************
This is the page where the user views his or her groups.  This page is accessed from the Main Page.  In this page is a list of which contacts are in the group, the name of the group, a little box for sending messages, and a send button. 

The group view page is also the method to check on responses for active requests.
(e.g. send request to HR group... click HR group from main page to view startus of responses)

###Visuals:

On the top of the window is a button in the corner labeled "+ Members".  On the opposite corner there is a button labeled "- Members" that does the reverse function.

In the middle of the application is the group name.

Under the group name is a scrollable portion that lists all of the contacts included in the group.
	The contact names are clickable and will open a new page with information about the contact.

There is a short message field at the bottom of the page - the user can enter a short message.

Under short message is a big send button that sends the message/request to the entire group.

Adjacent to the message field, is a simple back button.

- + Members button will take user to + Members Page

- - Members button will take user to - Members Page

- Clicking any group contact will open up a contact specific page containing his/her information.

- Send will send message, and question marks, check marks, or X marks will appear next to each contacts name to indicate response.

- Back will return the user to the Main Page

###Data:

The name of the group will be pulled from whereever "Groups" are stored, be it locally or serverside.

The group member list will be populated from the Group data.

Click on a member should open a new window, and their information should be populated in that new window.

Send message will pass the short message text field to the server.  The server will then forward 
the request and message to all contacts listed in the Group.  Those receiving the message will be given an option to respond.

After send message has been pressed, icons will appear next to Group contact names.
	Icons:
		Check - request was approved, proceed to contact
		X - request was denied, contact is not available
		Question Mark - contact has not responded to request.

After send message is pressed, it should either "gray out" to prevent another message being sent, or rename itself to "Send new message".
Clicking the button will send a new message, and the icons next to group contacts will change according to the newest request.



********************************************************************************************
** Respond to Request Page --> 7 (xml name is: view_request_respond.xml)
*********************************************************************************************
This page is where the user will respond to other users' requests.  It contains the other users' name, their message, and simple yes or no buttons. 

##Visuals:

In the cetner of the application is a text box that reads "Request from ____ _____" (contact's name).

Under will be his or her short message.

At the bottom of the screen are fairly large reply yes and no buttons to reply.

### Data:

Request from Contact Name  text box gets its information from the initial message forward from the database server.  The contact's first and last name will occupy this box.

The short message is also acquired through the message forward from the database server.

Replying yes or no will send the appropriate response to the server.  The server will then forward the response to the original sender (the requesting user).

Either option will exit the current screen and revert back to the View Requests Page.  The request that was just responded has been removed and will not appear in the View Requests Page anymore.

*****************************************************************************************
**Create New Group View  --> 8 (xml name is: group_view_newmember.xml)
****************************************************************************************
THis is the page where users create groups.  They add members to group on a different page.

###Visuals

The page simply contains a text field to enter the desired group name.

Under there are a submit and cancel buttons.

-Submit will enter the data and direct the user back to the Main Page

-Cancel will NOT enter any data and take the user back to the Main Page.

###Data

The Enter Group Name entry field will store this name either locally on the device or in the database.

This name will be referenced again in the Main Page, and the following pages concerning Groups.

The submit button is like an "okay send" sort of thing.

*****************************************************************************************
**Remove Member View  --> 9
****************************************************************************************
This is the screen where the user can remove members from a group.  They check off boxes next to the contacts' names then press the remove button to remove.  Cancel will save no changes.

### Visuals:

The middle portion of the screen is taken up by a scrollable window of group member names.  If there are more contacts than the window can hold, it will become scrollable.  Each contact has a check box next to their name OR the contact can be highlighted [as a selection].

There is a remove button on the bottom left corner.  On the opposite corner is a cancel button.

Choosing either bottom button will return the user to the Group View Page.

### Data:

Group member names will come from wherever group data is stored (be it locally or on the server).

When group members are removed, they will disappear from the group data and also will no longer show up in the previous Group View window.

*****************************************************************************************
**New Group Member View --> 10
****************************************************************************************

This is the page where new users are added to existing groups.  (there is no functionality to make groups and users at the same time)

Visual:

Contains three text fields:
	username - ONly field that works right now
	email
	phonenumber

Data:

Application will query server with username.  If username exists, nothing crazy happens.  If username does not exist in database, notify user and allow them to try again

When succesfull, username will be added to g


*****************************************************************************************
** Remove Groups View --> 11
****************************************************************************************

This is the page where the user can remove entire groups.

### Visuals:

In the center of the page exists a scrollable window that contains group names.  If there are more group names than the window can hold it will be scrollable.  Next to each group name is a check box OR the entire group name can be highlighted [as a selction].

On the bottom left corner of the application rests a remove group button.  The opposite corner has a cancel button.

Selecting remove group without selecting a group will yield no response.

Selecting either button will return the user to the Main View Page.

### Data

Data about groups will be imported from wherever group data is stored (be it local or serverside).

If there are no groups, the window should be empty.

When a group is selected and the remove group button has been pressed, the group will be deleted from the group data file and will no longer show up in the Main View page.

Pressing cancel will return the user to the Main view page without making any changes.

*****************************************************************************************
**Group Member View --> 12
****************************************************************************************
Group view is a page that shows up when a user clicks on a group members name from the Group View Page.

### Visuals:

In the middle of the app there is a Contact name, under a Phone Number, and under that an email address.

In the bottom right of the window resides a cancel button.

The cancel button will return the user to the Group View Page.

### Data:

The contact name, phone number, and email will be populated from either the local data storage or the database server.
	(local data case: the group data file will contain entire records from database server)
	(server case: opening this page will query the server for information)
Cancel button will return user backwards.